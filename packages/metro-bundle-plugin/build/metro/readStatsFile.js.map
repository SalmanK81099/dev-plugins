{"version":3,"file":"readStatsFile.js","sourceRoot":"","sources":["../../src/metro/readStatsFile.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,IAAI,CAAC;AAEpB,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AACxD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,SAAiB,EAAE,QAAQ,GAAG,eAAe,EAAE;IACrF,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;QAC7B,MAAM,IAAI,KAAK,CAAC,eAAe,SAAS,cAAc,CAAC,CAAC;KACzD;IAED,MAAM,IAAI,GAAG,MAAM,aAAa,CAAC,SAAS,CAAC,CAAC;IAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAE1C,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,CAAC,OAAO,EAAE;QACpE,MAAM,IAAI,KAAK,CAAC,eAAe,SAAS,oDAAoD,CAAC,CAAC;KAC/F;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,SAAiB;IACtD,MAAM,OAAO,GAAmC,EAAE,CAAC;IACnD,MAAM,aAAa,GAAG,aAAa,CAAC;IAEpC,MAAM,QAAQ,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QACxC,IAAI,KAAK,KAAK,CAAC;YAAE,OAAO;QAExB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAClD,IAAI,IAAI,EAAE;YACR,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;SACvC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["import fs from 'fs';\n\nimport { mapLines, readFirstLine } from '../utils/file';\nimport { getStatsMetdata } from './createStatsFile';\n\nexport async function validateStatsFile(statsFile: string, metadata = getStatsMetdata()) {\n  if (!fs.existsSync(statsFile)) {\n    throw new Error(`Stats file \"${statsFile}\" not found.`);\n  }\n\n  const line = await readFirstLine(statsFile);\n  const data = line ? JSON.parse(line) : {};\n\n  if (data.name !== metadata.name || data.version !== metadata.version) {\n    throw new Error(`Stats file \"${statsFile}\" is incompatible with this version of the plugin.`);\n  }\n}\n\nexport async function listStatsEntries(statsFile: string) {\n  const entries: { id: number; name: string }[] = [];\n  const bundlePattern = /^\\[\"([^\"]+)/;\n\n  await mapLines(statsFile, (index, line) => {\n    if (index === 1) return;\n\n    const [_, name] = line.match(bundlePattern) ?? [];\n    if (name) {\n      entries.push({ id: index - 1, name });\n    }\n  });\n\n  return entries;\n}\n"]}